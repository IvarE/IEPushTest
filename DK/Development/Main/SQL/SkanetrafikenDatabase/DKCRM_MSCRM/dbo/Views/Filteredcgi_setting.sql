

--
-- report view for cgi_setting
--
create view dbo.[Filteredcgi_setting] (
    [cgi_amount_limit],
    [cgi_amount_limit_base],
    [cgi_amount_limit_warn],
    [cgi_amount_limit_warn_base],
    [cgi_attentionemailtemplate],
    [cgi_biffconnectorservice],
    [cgi_bomburl],
    [cgi_cancelgiftcodeservice],
    [cgi_case_rgol_defaultowner],
    [cgi_case_rgol_defaultownername],
    [cgi_case_rgol_defaultowneryominame],
    [cgi_case_rgol_defaultqueue],
    [cgi_case_rgol_defaultqueuename],
    [cgi_category_detail1id],
    [cgi_category_detail1idname],
    [cgi_category_detail2id],
    [cgi_category_detail2idname],
    [cgi_category_detail3id],
    [cgi_category_detail3idname],
    [cgi_chargeorderservice],
    [cgi_createcouponservice],
    [cgi_createemailcouponservice],
    [cgi_crmcardservice],
    [cgi_crmuri],
    [cgi_cubicservice],
    [cgi_data],
    [cgi_defaultcustomeroncase],
    [cgi_defaultcustomeroncasename],
    [cgi_defaultcustomeroncaseyominame],
    [cgi_defaultoutgoingemailqueue],
    [cgi_defaultoutgoingemailqueuename],
    [cgi_defaultteamonpasscase],
    [cgi_defaultteamonpasscasename],
    [cgi_defaultteamonpasscaseyominame],
    [cgi_ehandelorderservice],
    [cgi_etisservice],
    [cgi_extconnectorservice],
    [cgi_getoutstandingchargesservice],
    [cgi_giftcardservice],
    [cgi_milage_contribution],
    [cgi_milage_contribution_base],
    [cgi_name],
    [cgi_organizationprefix],
    [cgi_pubtransservice],
    [cgi_raindanceprefix],
    [cgi_rechargecardservice],
    [cgi_recipient_entity_id],
    [cgi_refundtypeproductnotrequiredid],
    [cgi_refundtypeproductnotrequiredidname],
    [cgi_reinvoicingphonenumber],
    [cgi_remitanceemailtemplate],
    [cgi_sendvaluecodemailservice],
    [cgi_settingid],
    [cgi_synccustomercardservice],
    [cgi_synccustomerservice],
    [cgi_userid],
    [cgi_useridname],
    [cgi_useridyominame],
    [cgi_validfrom],
    [cgi_validfromutc],
    [cgi_validto],
    [cgi_validtoutc],
    [cgi_valuecodevalidformonths],
    [createdby],
    [createdbyname],
    [createdbyyominame],
    [createdon],
    [createdonutc],
    [createdonbehalfby],
    [createdonbehalfbyname],
    [createdonbehalfbyyominame],
    [exchangerate],
    [importsequencenumber],
    [modifiedby],
    [modifiedbyname],
    [modifiedbyyominame],
    [modifiedon],
    [modifiedonutc],
    [modifiedonbehalfby],
    [modifiedonbehalfbyname],
    [modifiedonbehalfbyyominame],
    [organizationid],
    [organizationidname],
    [overriddencreatedon],
    [overriddencreatedonutc],
    [statecode],
    [statecodename],
    [statuscode],
    [statuscodename],
    [timezoneruleversionnumber],
    [transactioncurrencyid],
    [transactioncurrencyidname],
    [utcconversiontimezonecode],
    [versionnumber],
    crm_moneyformatstring,
    crm_priceformatstring
) with view_metadata as
select
    [cgi_setting].[cgi_amount_limit],
    [cgi_setting].[cgi_amount_limit_Base],
    [cgi_setting].[cgi_amount_limit_warn],
    [cgi_setting].[cgi_amount_limit_warn_Base],
    [cgi_setting].[cgi_AttentionEmailTemplate],
    [cgi_setting].[cgi_BIFFConnectorService],
    [cgi_setting].[cgi_BOMBUrl],
    [cgi_setting].[cgi_CancelGiftCodeService],
    [cgi_setting].[cgi_case_rgol_defaultowner],
    [cgi_setting].[cgi_case_rgol_defaultownerName],
    [cgi_setting].[cgi_case_rgol_defaultownerYomiName],
    [cgi_setting].[cgi_case_rgol_defaultqueue],
    [cgi_setting].[cgi_case_rgol_defaultqueueName],
    [cgi_setting].[cgi_category_detail1id],
    [cgi_setting].[cgi_category_detail1idName],
    [cgi_setting].[cgi_category_detail2id],
    [cgi_setting].[cgi_category_detail2idName],
    [cgi_setting].[cgi_category_detail3id],
    [cgi_setting].[cgi_category_detail3idName],
    [cgi_setting].[cgi_chargeorderservice],
    [cgi_setting].[cgi_createcouponservice],
    [cgi_setting].[cgi_createemailcouponservice],
    [cgi_setting].[cgi_CRMCardService],
    [cgi_setting].[cgi_CRMUri],
    [cgi_setting].[cgi_CubicService],
    [cgi_setting].[cgi_Data],
    [cgi_setting].[cgi_DefaultCustomerOnCase],
    [cgi_setting].[cgi_DefaultCustomerOnCaseName],
    [cgi_setting].[cgi_DefaultCustomerOnCaseYomiName],
    [cgi_setting].[cgi_Defaultoutgoingemailqueue],
    [cgi_setting].[cgi_DefaultoutgoingemailqueueName],
    [cgi_setting].[cgi_DefaultTeamonPASSCase],
    [cgi_setting].[cgi_DefaultTeamonPASSCaseName],
    [cgi_setting].[cgi_DefaultTeamonPASSCaseYomiName],
    [cgi_setting].[cgi_EhandelOrderService],
    [cgi_setting].[cgi_EtisService],
    [cgi_setting].[cgi_ExtConnectorService],
    [cgi_setting].[cgi_getoutstandingchargesservice],
    [cgi_setting].[cgi_GiftcardService],
    [cgi_setting].[cgi_milage_contribution],
    [cgi_setting].[cgi_milage_contribution_Base],
    [cgi_setting].[cgi_name],
    [cgi_setting].[cgi_OrganizationPrefix],
    [cgi_setting].[cgi_PubTransService],
    [cgi_setting].[cgi_RaindancePrefix],
    [cgi_setting].[cgi_rechargecardservice],
    [cgi_setting].[cgi_recipient_entity_id],
    [cgi_setting].[cgi_refundtypeproductnotrequiredid],
    [cgi_setting].[cgi_refundtypeproductnotrequiredidName],
    [cgi_setting].[cgi_reinvoicingphonenumber],
    [cgi_setting].[cgi_RemitanceEmailTemplate],
    [cgi_setting].[cgi_sendvaluecodemailservice],
    [cgi_setting].[cgi_settingId],
    [cgi_setting].[cgi_SyncCustomerCardService],
    [cgi_setting].[cgi_synccustomerservice],
    [cgi_setting].[cgi_userid],
    [cgi_setting].[cgi_useridName],
    [cgi_setting].[cgi_useridYomiName],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_setting].[cgi_ValidFrom], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_setting].[cgi_ValidFrom],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_setting].[cgi_ValidTo], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_setting].[cgi_ValidTo],
    [cgi_setting].[cgi_ValueCodeValidForMonths],
    [cgi_setting].[CreatedBy],
    [cgi_setting].[CreatedByName],
    [cgi_setting].[CreatedByYomiName],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_setting].[CreatedOn], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_setting].[CreatedOn],
    [cgi_setting].[CreatedOnBehalfBy],
    [cgi_setting].[CreatedOnBehalfByName],
    [cgi_setting].[CreatedOnBehalfByYomiName],
    [cgi_setting].[ExchangeRate],
    [cgi_setting].[ImportSequenceNumber],
    [cgi_setting].[ModifiedBy],
    [cgi_setting].[ModifiedByName],
    [cgi_setting].[ModifiedByYomiName],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_setting].[ModifiedOn], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_setting].[ModifiedOn],
    [cgi_setting].[ModifiedOnBehalfBy],
    [cgi_setting].[ModifiedOnBehalfByName],
    [cgi_setting].[ModifiedOnBehalfByYomiName],
    [cgi_setting].[OrganizationId],
    [cgi_setting].[OrganizationIdName],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_setting].[OverriddenCreatedOn], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_setting].[OverriddenCreatedOn],
    [cgi_setting].[statecode],
    statecodePLTable.Value,
    [cgi_setting].[statuscode],
    statuscodePLTable.Value,
    [cgi_setting].[TimeZoneRuleVersionNumber],
    [cgi_setting].[TransactionCurrencyId],
    [cgi_setting].[TransactionCurrencyIdName],
    [cgi_setting].[UTCConversionTimeZoneCode],
    [cgi_setting].[VersionNumber],
   dbo.fn_GetNumberFormatString(t.CurrencyPrecision, us.NumberGroupFormat, us.NegativeCurrencyFormatCode, 1, case o.CurrencyDisplayOption when 0 then t.CurrencySymbol when 1 then t.ISOCurrencyCode end, us.CurrencyFormatCode),
   dbo.fn_GetNumberFormatString(o.PricingDecimalPrecision, us.NumberGroupFormat, us.NegativeCurrencyFormatCode, 1, case o.CurrencyDisplayOption when 0 then t.CurrencySymbol when 1 then t.ISOCurrencyCode end, us.CurrencyFormatCode)
from cgi_setting
    join SystemUserBase u on (u.SystemUserId = dbo.fn_FindUserGuid() and u.IsDisabled = 0)
    left join UserSettingsBase us on us.SystemUserId = u.SystemUserId
    left join OrganizationBase o on u.OrganizationId = o.OrganizationId
    left join TransactionCurrencyBase t on t.TransactionCurrencyId = [cgi_setting].TransactionCurrencyId
    left outer join StringMap [statecodePLTable] on 
		([statecodePLTable].AttributeName = 'statecode'
		and [statecodePLTable].ObjectTypeCode = 10026
		and [statecodePLTable].AttributeValue = [cgi_setting].[statecode]
		and [statecodePLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [statuscodePLTable] on 
		([statuscodePLTable].AttributeName = 'statuscode'
		and [statuscodePLTable].ObjectTypeCode = 10026
		and [statuscodePLTable].AttributeValue = [cgi_setting].[statuscode]
		and [statuscodePLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    cross join dbo.fn_GetMaxPrivilegeDepthMask(10026) pdm
where
(
    -- privilege check
    pdm.PrivilegeDepthMask is not null and
    [cgi_setting].OrganizationId = u.OrganizationId
)
