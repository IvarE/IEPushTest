

--
-- report view for cgi_refund
--
create view dbo.[Filteredcgi_refund] (
    [cgi_accountid],
    [cgi_accountidname],
    [cgi_accountno],
    [cgi_amount],
    [cgi_amountwithtax],
    [cgi_amountwithtax_base],
    [cgi_amount_above_limit],
    [cgi_amount_above_limit_base],
    [cgi_amount_base],
    [cgi_amount_limit_warn],
    [cgi_amount_limit_warn_base],
    [cgi_attestation],
    [cgi_attestationname],
    [cgi_attest_req],
    [cgi_auth_approved],
    [cgi_auth_approvedname],
    [cgi_calculated_amount],
    [cgi_calculated_compensation],
    [cgi_car_reg],
    [cgi_caseid],
    [cgi_caseidname],
    [cgi_checknumber],
    [cgi_comments],
    [cgi_contactid],
    [cgi_contactidname],
    [cgi_contactidyominame],
    [cgi_customermessage],
    [cgi_ehordernumber],
    [cgi_email],
    [cgi_errormessage],
    [cgi_exportdate],
    [cgi_exportdateutc],
    [cgi_exportedraindance],
    [cgi_exportedraindancename],
    [cgi_exportmessage],
    [cgi_foreign_payment],
    [cgi_iban],
    [cgi_invoiceexportdate],
    [cgi_invoiceexportdateutc],
    [cgi_invoiceexportedraindance],
    [cgi_invoiceexportedraindancename],
    [cgi_invoiceexportmessage],
    [cgi_invoicerecipient],
    [cgi_invoicerecipientname],
    [cgi_isautogenerated],
    [cgi_isautogeneratedname],
    [cgi_last_valid],
    [cgi_last_validutc],
    [cgi_mandcust],
    [cgi_milage],
    [cgi_milage_compensation],
    [cgi_mobilenumber],
    [cgi_productid],
    [cgi_productidname],
    [cgi_quantity],
    [cgi_reference],
    [cgi_refundid],
    [cgi_refundnumber],
    [cgi_refundtypeid],
    [cgi_refundtypeidname],
    [cgi_reimbursementformid],
    [cgi_reimbursementformidname],
    [cgi_reinvoicing],
    [cgi_reinvoicingname],
    [cgi_responsibleid],
    [cgi_responsibleidname],
    [cgi_soc_sec_number],
    [cgi_swift],
    [cgi_taxi_company],
    [cgi_transportcompanyid],
    [cgi_transportcompanyidname],
    [cgi_travelcard_number],
    [cgi_value_code],
    [cgi_value_code_used],
    [cgi_value_code_usedutc],
    [cgi_vat_code],
    [cgi_vat_codename],
    [createdby],
    [createdbyname],
    [createdbyyominame],
    [createdon],
    [createdonutc],
    [createdonbehalfby],
    [createdonbehalfbyname],
    [createdonbehalfbyyominame],
    [exchangerate],
    [importsequencenumber],
    [modifiedby],
    [modifiedbyname],
    [modifiedbyyominame],
    [modifiedon],
    [modifiedonutc],
    [modifiedonbehalfby],
    [modifiedonbehalfbyname],
    [modifiedonbehalfbyyominame],
    [overriddencreatedon],
    [overriddencreatedonutc],
    [ownerid],
    [owneriddsc],
    [owneridname],
    [owneridtype],
    [owneridyominame],
    [owningbusinessunit],
    [owningteam],
    [owninguser],
    [statecode],
    [statecodename],
    [statuscode],
    [statuscodename],
    [timezoneruleversionnumber],
    [transactioncurrencyid],
    [transactioncurrencyidname],
    [utcconversiontimezonecode],
    [versionnumber],
    crm_moneyformatstring,
    crm_priceformatstring
) with view_metadata as
select
    [cgi_refund].[cgi_Accountid],
    [cgi_refund].[cgi_AccountidName],
    [cgi_refund].[cgi_accountno],
    [cgi_refund].[cgi_Amount],
    [cgi_refund].[cgi_AmountwithTAX],
    [cgi_refund].[cgi_amountwithtax_Base],
    [cgi_refund].[cgi_amount_above_limit],
    [cgi_refund].[cgi_amount_above_limit_Base],
    [cgi_refund].[cgi_amount_Base],
    [cgi_refund].[cgi_amount_limit_warn],
    [cgi_refund].[cgi_amount_limit_warn_Base],
    [cgi_refund].[cgi_Attestation],
    cgi_AttestationPLTable.Value,
    [cgi_refund].[cgi_attest_req],
    [cgi_refund].[cgi_auth_approved],
    cgi_auth_approvedPLTable.Value,
    [cgi_refund].[cgi_calculated_amount],
    [cgi_refund].[cgi_calculated_compensation],
    [cgi_refund].[cgi_car_reg],
    [cgi_refund].[cgi_Caseid],
    [cgi_refund].[cgi_CaseidName],
    [cgi_refund].[cgi_checknumber],
    [cgi_refund].[cgi_comments],
    [cgi_refund].[cgi_Contactid],
    [cgi_refund].[cgi_ContactidName],
    [cgi_refund].[cgi_ContactidYomiName],
    [cgi_refund].[cgi_CustomerMessage],
    [cgi_refund].[cgi_EHOrderNumber],
    [cgi_refund].[cgi_email],
    [cgi_refund].[cgi_errormessage],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_refund].[cgi_ExportDate], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_refund].[cgi_ExportDate],
    [cgi_refund].[cgi_ExportedRaindance],
    cgi_ExportedRaindancePLTable.Value,
    [cgi_refund].[cgi_ExportMessage],
    [cgi_refund].[cgi_foreign_payment],
    [cgi_refund].[cgi_iban],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_refund].[cgi_invoiceexportdate], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_refund].[cgi_invoiceexportdate],
    [cgi_refund].[cgi_invoiceexportedraindance],
    cgi_invoiceexportedraindancePLTable.Value,
    [cgi_refund].[cgi_invoiceexportmessage],
    [cgi_refund].[cgi_InvoiceRecipient],
    [cgi_refund].[cgi_InvoiceRecipientName],
    [cgi_refund].[cgi_IsAutoGenerated],
    cgi_IsAutoGeneratedPLTable.Value,
    dbo.fn_UTCToTzSpecificLocalTime([cgi_refund].[cgi_last_valid], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_refund].[cgi_last_valid],
    [cgi_refund].[cgi_mandcust],
    [cgi_refund].[cgi_milage],
    [cgi_refund].[cgi_milage_compensation],
    [cgi_refund].[cgi_MobileNumber],
    [cgi_refund].[cgi_Productid],
    [cgi_refund].[cgi_ProductidName],
    [cgi_refund].[cgi_Quantity],
    [cgi_refund].[cgi_Reference],
    [cgi_refund].[cgi_refundId],
    [cgi_refund].[cgi_refundnumber],
    [cgi_refund].[cgi_RefundTypeid],
    [cgi_refund].[cgi_RefundTypeidName],
    [cgi_refund].[cgi_ReimbursementFormid],
    [cgi_refund].[cgi_ReimbursementFormidName],
    [cgi_refund].[cgi_ReInvoicing],
    cgi_ReInvoicingPLTable.Value,
    [cgi_refund].[cgi_responsibleId],
    [cgi_refund].[cgi_responsibleIdName],
    [cgi_refund].[cgi_soc_sec_number],
    [cgi_refund].[cgi_swift],
    [cgi_refund].[cgi_taxi_company],
    [cgi_refund].[cgi_transportcompanyid],
    [cgi_refund].[cgi_transportcompanyidName],
    [cgi_refund].[cgi_travelcard_number],
    [cgi_refund].[cgi_value_code],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_refund].[cgi_value_code_used], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_refund].[cgi_value_code_used],
    [cgi_refund].[cgi_vat_code],
    cgi_vat_codePLTable.Value,
    [cgi_refund].[CreatedBy],
    [cgi_refund].[CreatedByName],
    [cgi_refund].[CreatedByYomiName],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_refund].[CreatedOn], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_refund].[CreatedOn],
    [cgi_refund].[CreatedOnBehalfBy],
    [cgi_refund].[CreatedOnBehalfByName],
    [cgi_refund].[CreatedOnBehalfByYomiName],
    [cgi_refund].[ExchangeRate],
    [cgi_refund].[ImportSequenceNumber],
    [cgi_refund].[ModifiedBy],
    [cgi_refund].[ModifiedByName],
    [cgi_refund].[ModifiedByYomiName],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_refund].[ModifiedOn], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_refund].[ModifiedOn],
    [cgi_refund].[ModifiedOnBehalfBy],
    [cgi_refund].[ModifiedOnBehalfByName],
    [cgi_refund].[ModifiedOnBehalfByYomiName],
    dbo.fn_UTCToTzSpecificLocalTime([cgi_refund].[OverriddenCreatedOn], 
			us.TimeZoneBias,
			us.TimeZoneDaylightBias,
			us.TimeZoneDaylightYear,
			us.TimeZoneDaylightMonth,
			us.TimeZoneDaylightDay,
			us.TimeZoneDaylightHour,
			us.TimeZoneDaylightMinute,
			us.TimeZoneDaylightSecond,
			0,
			us.TimeZoneDaylightDayOfWeek,
			us.TimeZoneStandardBias,
			us.TimeZoneStandardYear,
			us.TimeZoneStandardMonth,
			us.TimeZoneStandardDay,
			us.TimeZoneStandardHour,
			us.TimeZoneStandardMinute,
			us.TimeZoneStandardSecond,
			0,
			us.TimeZoneStandardDayOfWeek),
        [cgi_refund].[OverriddenCreatedOn],
    [cgi_refund].[OwnerId],
    --[cgi_refund].[OwnerIdDsc]
    0,
    [cgi_refund].[OwnerIdName],
    [cgi_refund].[OwnerIdType],
    [cgi_refund].[OwnerIdYomiName],
    [cgi_refund].[OwningBusinessUnit],
    [cgi_refund].[OwningTeam],
    [cgi_refund].[OwningUser],
    [cgi_refund].[statecode],
    statecodePLTable.Value,
    [cgi_refund].[statuscode],
    statuscodePLTable.Value,
    [cgi_refund].[TimeZoneRuleVersionNumber],
    [cgi_refund].[TransactionCurrencyId],
    [cgi_refund].[TransactionCurrencyIdName],
    [cgi_refund].[UTCConversionTimeZoneCode],
    [cgi_refund].[VersionNumber],
   dbo.fn_GetNumberFormatString(t.CurrencyPrecision, us.NumberGroupFormat, us.NegativeCurrencyFormatCode, 1, case o.CurrencyDisplayOption when 0 then t.CurrencySymbol when 1 then t.ISOCurrencyCode end, us.CurrencyFormatCode),
   dbo.fn_GetNumberFormatString(o.PricingDecimalPrecision, us.NumberGroupFormat, us.NegativeCurrencyFormatCode, 1, case o.CurrencyDisplayOption when 0 then t.CurrencySymbol when 1 then t.ISOCurrencyCode end, us.CurrencyFormatCode)
from cgi_refund
    join SystemUserBase u on (u.SystemUserId = dbo.fn_FindUserGuid() and u.IsDisabled = 0)
    left join UserSettingsBase us on us.SystemUserId = u.SystemUserId
    left join OrganizationBase o on u.OrganizationId = o.OrganizationId
    left join TransactionCurrencyBase t on t.TransactionCurrencyId = [cgi_refund].TransactionCurrencyId
    left outer join StringMap [cgi_AttestationPLTable] on 
		([cgi_AttestationPLTable].AttributeName = 'cgi_attestation'
		and [cgi_AttestationPLTable].ObjectTypeCode = 10019
		and [cgi_AttestationPLTable].AttributeValue = [cgi_refund].[cgi_Attestation]
		and [cgi_AttestationPLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [cgi_auth_approvedPLTable] on 
		([cgi_auth_approvedPLTable].AttributeName = 'cgi_auth_approved'
		and [cgi_auth_approvedPLTable].ObjectTypeCode = 10019
		and [cgi_auth_approvedPLTable].AttributeValue = [cgi_refund].[cgi_auth_approved]
		and [cgi_auth_approvedPLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [cgi_ExportedRaindancePLTable] on 
		([cgi_ExportedRaindancePLTable].AttributeName = 'cgi_exportedraindance'
		and [cgi_ExportedRaindancePLTable].ObjectTypeCode = 10019
		and [cgi_ExportedRaindancePLTable].AttributeValue = [cgi_refund].[cgi_ExportedRaindance]
		and [cgi_ExportedRaindancePLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [cgi_invoiceexportedraindancePLTable] on 
		([cgi_invoiceexportedraindancePLTable].AttributeName = 'cgi_invoiceexportedraindance'
		and [cgi_invoiceexportedraindancePLTable].ObjectTypeCode = 10019
		and [cgi_invoiceexportedraindancePLTable].AttributeValue = [cgi_refund].[cgi_invoiceexportedraindance]
		and [cgi_invoiceexportedraindancePLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [cgi_IsAutoGeneratedPLTable] on 
		([cgi_IsAutoGeneratedPLTable].AttributeName = 'cgi_isautogenerated'
		and [cgi_IsAutoGeneratedPLTable].ObjectTypeCode = 10019
		and [cgi_IsAutoGeneratedPLTable].AttributeValue = [cgi_refund].[cgi_IsAutoGenerated]
		and [cgi_IsAutoGeneratedPLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [cgi_ReInvoicingPLTable] on 
		([cgi_ReInvoicingPLTable].AttributeName = 'cgi_reinvoicing'
		and [cgi_ReInvoicingPLTable].ObjectTypeCode = 10019
		and [cgi_ReInvoicingPLTable].AttributeValue = [cgi_refund].[cgi_ReInvoicing]
		and [cgi_ReInvoicingPLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [cgi_vat_codePLTable] on 
		([cgi_vat_codePLTable].AttributeName = 'cgi_vat_code'
		and [cgi_vat_codePLTable].ObjectTypeCode = 10019
		and [cgi_vat_codePLTable].AttributeValue = [cgi_refund].[cgi_vat_code]
		and [cgi_vat_codePLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [statecodePLTable] on 
		([statecodePLTable].AttributeName = 'statecode'
		and [statecodePLTable].ObjectTypeCode = 10019
		and [statecodePLTable].AttributeValue = [cgi_refund].[statecode]
		and [statecodePLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    left outer join StringMap [statuscodePLTable] on 
		([statuscodePLTable].AttributeName = 'statuscode'
		and [statuscodePLTable].ObjectTypeCode = 10019
		and [statuscodePLTable].AttributeValue = [cgi_refund].[statuscode]
		and [statuscodePLTable].LangId = 
			case us.UILanguageId 
				when 0 then o.LanguageCode
				else us.UILanguageId
			end)
    cross join dbo.fn_GetMaxPrivilegeDepthMask(10019) pdm
where
(
	-- privilege check
	pdm.PrivilegeDepthMask is not null and
	(
	
	-- Owner check
	--
	[cgi_refund].OwnerId in 
	( 	-- returns only principals with Basic Read privilege for entity
		select pem.PrincipalId from PrincipalEntityMap pem (NOLOCK)
			join SystemUserPrincipals sup (NOLOCK) on pem.PrincipalId = sup.PrincipalId 
			where sup.SystemUserId = u.SystemUserId 
				and pem.ObjectTypeCode = 10019
	)	

		
	-- role based access
	or 
	
exists
(
	select 
	1
	where
	(
		-- deep/local security
		(((pdm.PrivilegeDepthMask & 0x4) != 0) or ((pdm.PrivilegeDepthMask & 0x2) != 0)) and 
		[cgi_refund].[OwningBusinessUnit] in (select BusinessUnitId from SystemUserBusinessUnitEntityMap (NOLOCK) where SystemUserId = u.SystemUserId and ObjectTypeCode = 10019)
	) 
	or
	(
		-- global security
		((pdm.PrivilegeDepthMask & 0x8) != 0) and 
		[cgi_refund].[OwningBusinessUnit] is not null 
	) 
)

	
	-- object shared to the user 
	or 
	[cgi_refund].[cgi_refundId] in 
		(
		select  POA.ObjectId from PrincipalObjectAccess POA 
		join SystemUserPrincipals sup (NOLOCK) on POA.PrincipalId = sup.PrincipalId
			where sup.SystemUserId = u.SystemUserId and
				POA.ObjectTypeCode = 10019 and
				((POA.AccessRightsMask | POA.InheritedAccessRightsMask) & 1)=1
		)
	)
)
